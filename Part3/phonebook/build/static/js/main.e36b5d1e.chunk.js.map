{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","newName","onNameChange","newNumber","onNumberChange","type","Persons","persons","filtered","handleRemovePerson","filter","f","name","toLowerCase","length","map","p","key","id","className","number","onClick","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","Notification","message","App","useState","setPersons","setNewName","setNewNumber","setFiltered","errorMessage","setErrorMessage","useEffect","personService","initialPeople","notifier","setTimeout","event","target","preventDefault","existingPerson","find","x","window","confirm","updatedPerson","people","catch","error","returnedPerson","concat","console","log","thePerson","person","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e36b5d1e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n      <div>\n        Filter show with <input value={props.value} onChange={props.onChange}/>\n      </div>\n    )\n  }\n\n  export default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n      <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input value={props.newName} onChange={props.onNameChange}/>\n        </div>\n        <div>\n          number: <input value={props.newNumber} onChange={props.onNumberChange}/>\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    )\n  }\n\n  export default PersonForm","import React from \"react\";\n\nconst Persons = ({ persons, filtered, handleRemovePerson }) => {\n  const personToShow =\n    persons.filter((f) => f.name.toLowerCase() === filtered).length > 0\n      ? persons.filter((f) => f.name.toLowerCase() === filtered)\n      : persons;\n\n  return personToShow.map((p) => (\n    <p key={p.id} className=\"phonebook\">\n      {p.name} {p.number}\n      <button onClick={() => handleRemovePerson(p.id)}>delete</button>\n    </p>\n  ));\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newNumber) => {\n  const request = axios.put(`${baseUrl}/${id}`, newNumber);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n  // if (message.includes(\"Information\")) {\n  //   return <div className={message.type}>{message}</div>;\n  // }\n\n  // return <div className=\"message\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filtered, setFiltered] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialPeople) => {\n      setPersons(initialPeople)\n    })\n  }, [])\n\n  const notifier = (message, type = 'message') => {\n    setErrorMessage({ message, type })\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    // let filterPerson = persons.filter(\n    //   (x) => x.name === newName && x.number === newNumber\n    // );\n    let existingPerson = persons.find((x) => x.name === newName)\n\n    if (existingPerson) {      \n      if (window.confirm(`${newName} has already been added to phonebook, replace the old number with a new one?`)){\n        const updatedPerson = {\n          name: newName,\n          number: newNumber,\n        }\n        personService\n        .update(existingPerson.id, updatedPerson)\n        .then((response) => {\n          setPersons(persons.map((people) => (people.id !== existingPerson.id ? people : response)))\n        })\n        .then(() => {\n          notifier(`${newName}'s phonenumber has been updated`)\n        }).catch((error) => {\n          notifier(\n            `${newName} has already been removed from the server`,\n            'error'\n          )\n        })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(personObject)\n        .then((returnedPerson) => {\n          notifier(`${newName} has been added`)\n          setPersons(persons.concat(returnedPerson))\n        })\n        .catch((error) => {\n          setErrorMessage(`Information ${error.response.data.error}`)\n          notifier(`${error.response.data.error}`, 'error')\n          console.log(error.response.data)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n    setFiltered('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFiltered(event.target.value)\n  }\n\n  const removePerson = (id) => {\n    let thePerson = persons.find((person) => person.id === id)\n    if (window.confirm(`Delete ${thePerson.name}?`)) {\n      personService\n        .remove(id)\n        .then((response) => {\n          console.log(response)\n          setPersons(persons.filter((x) => x.id !== id))\n        })\n        .catch((error) => {\n          alert(`${thePerson.name} was already deleted from the server`)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <div>\n        <Filter\n          value={filtered}\n          persons={persons}\n          filter={filtered}\n          onChange={handleFilter}\n        />\n      </div>\n      <h3>Add a new</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        filtered={filtered.toLowerCase()}\n        handleRemovePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}